from flpianoroll import *
import math
import random

notes = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"]

def type(s):
	if s.startswith(("+", "-")):
		return "relative"
	elif "/" in s:
		return "ratio"
	else:
		return "absolute"

def namethatthang():
	prefixes = ["", "super", "amazing", "wonderful", "fabulous", "outstanding", "ok", "supercalifragilisticexpialidocious", "cutting edge", "state of the art", "new", "old"]
	editions = ["", "lite", "premium", "pro", "working 2025", "gold", "free", "64", "fruity edition", "producer edition"]
	
	return random.choice(prefixes) + " scale thang " + random.choice(editions)
	

	
def createDialog():
	form = ScriptDialog(namethatthang(),
		"Allowed formats:\n"
		"Blank (doesn't affect the note)\n"
		"Absolute (386, 133.6)\n"
		"Relative (+12, -57.2)\n"
		"Ratio (5/3, 8/6)\n"
		"(Cents are rounded to tens)")
	form.AddInputCombo("Base note", notes, 0)
	for note in notes:
		form.AddInputText(note, "")
	return form

def apply(form):
	try:
		selectlar = any(score.getNote(i).selected for i in range(score.noteCount))
		for i in range(score.noteCount):
			note = score.getNote(i)
			if selectlar and not note.selected:
				continue
			else:
				basenote = form.GetInputValue("Base note")
				pitch_class = note.number % 12
				inscale_class = (pitch_class - basenote) % 12
				field = notes[inscale_class]
				input = form.GetInputValue(field).strip()

				if input == "" or input == "-":
					note.pitchofs = 0
				else:
					try:
						if type(input) == "absolute":
							input = float(input)					
							dist = inscale_class*100
							note.pitchofs = round((input - dist)/10)
						elif type(input) == "relative":
							if input.startswith("+"):
								input = float(input.replace("+", ""))
							else:
								input = float(input)						
							note.pitchofs = round(input/10)
						elif type(input) == "ratio":
							noms, denoms = input.split("/")
							nom, denom = int(noms), int(denoms)
							cents = 1200 * math.log2(nom / denom)
							base = inscale_class * 100
							note.pitchofs = round((cents - base) / 10)
					except Exception:
						pakala = True
	except Exception as e:
		pakala = True
